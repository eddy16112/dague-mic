extern "C" %{
/*
 *  Copyright (c) 2010
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#define PRECISION_z

#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/precision.h"
#include "data_dist/matrix/matrix.h"
#include "dplasma/lib/memory_pool.h"
#include "dplasma/lib/dplasmajdf.h"

%}

side      [type = "PLASMA_enum"]
uplo      [type = "PLASMA_enum"]
trans     [type = "PLASMA_enum"]
diag      [type = "PLASMA_enum"]
alpha     [type = "dague_complex64_t"]
dataA     [type = "dague_ddesc_t *"]
descA     [type = "tiled_matrix_desc_t" hidden = on default = "*((tiled_matrix_desc_t*)dataA)"]
dataB     [type = "dague_ddesc_t *"]
descB     [type = "tiled_matrix_desc_t" hidden = on default = "*((tiled_matrix_desc_t*)dataB)"]


ztrmm(m, n) 
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)

  /* Locality */
  : dataB((descB.mt-1)-m,n)

  CTL   ctl0 <- ctl0 zgemm(0..m-1, n, descB.mt-m-1)
  READ  A    <- A ztrmm_in_data_A0(m, n)
  RW    B    <- dataB((descB.mt-1)-m,n)
             -> E zgemm(m, n, 0)

BODY

    int tempmm = (((descB.mt-1)-m)==(descB.mt-1)) ? (descB.m-(((descB.mt-1)-m)*descB.mb)) : descB.mb;
    int tempnn = ((n)==(descB.nt-1)) ? (descB.n-(n*descB.nb)) : descB.nb;
    int lda = BLKLDD( descA, (descB.mt-1)-m );
    int ldb = BLKLDD( descB, (descB.mt-1)-m );

    printlog("CORE_ztrmm(%d, %d)\n"
             "\t(side, uplo, trans, diag, tempmm, tempnn, alpha, A(%d,%d)[%p], lda, B(%d,%d)[%p], ldb)\n",
             m, n, (descB.mt-1)-m, (descB.mt-1)-m, A, (descB.mt-1)-m, n, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrmm(side, uplo, trans, 
               diag, tempmm, tempnn, 
               alpha, A /* dataA((descB.mt-1)-m,(descB.mt-1)-m) */, lda, 
               B /* dataB((descB.mt-1)-m,n) */, ldb );
#endif  /* !defined(DAGUE_DRY_RUN) */

END

ztrmm_in_data_A0(m, n) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)

  /* Locality */
  : dataA((descB.mt-1)-m,(descB.mt-1)-m)

  READ  A    <- dataA((descB.mt-1)-m,(descB.mt-1)-m)
             -> A ztrmm(m, n)

BODY
    /* nothing */
END

zgemm(m, n, k) 
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)
  k = 0..(descB.mt-m-2)

  /* Locality */
  : dataB((descB.mt-1)-m,n)

  CTL   ctl0 -> ctl0 ztrmm(descB.mt-k-1, n)
  READ  C    <- C zgemm_in_data_A0(m, n, k)
  READ  D    <- D zgemm_in_data_B1(m, n, k)
  RW    E    <- ((0==k)) ? B ztrmm(m, n)
             <- ((k>=1)) ? E zgemm(m, n, k-1)
             -> (((k+m+2)==descB.mt) & (k>=1)) ? dataB((descB.mt-1)-m,n)
             -> ((descB.mt>=(m+k+3))) ? E zgemm(m, n, k+1)

BODY

    int tempmm = (((descB.mt-1)-m)==(descB.mt-1)) ? (descB.m-(((descB.mt-1)-m)*descB.mb)) : descB.mb;
    int tempnn = ((n)==(descB.nt-1)) ? (descB.n-(n*descB.nb)) : descB.nb;
    int lda = BLKLDD( descA, (descB.mt-1)-m );
    int ldb = BLKLDD( descB, (descB.mt-1)-m );

    printlog("CORE_zgemm(%d, %d, %d)\n"
             "\t(trans, PlasmaNoTrans, tempmm, tempnn, descB.mb, alpha, A(%d,%d)[%p], lda, B(%d,%d)[%p], descB.mb, 1.000000, B(%d,%d)[%p], ldb)\n",
             m, n, k, (descB.mt-1)-m, k, C, k, n, D, (descB.mt-1)-m, n, E);

#if !defined(DAGUE_DRY_RUN)

    CORE_zgemm(trans, PlasmaNoTrans, tempmm, 
               tempnn, descB.mb, alpha, 
               C /* dataA((descB.mt-1)-m,k) */, lda, D /* dataB(k,n) */, 
               descB.mb, 1.000000, E /* dataB((descB.mt-1)-m,n) */, 
               ldb);
#endif  /* !defined(DAGUE_DRY_RUN) */

END

zgemm_in_data_B1(m, n, k) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)
  k = 0..(descB.mt-m-2)

  /* Locality */
  : dataB(k,n)

  READ  D    <- dataB(k,n)
             -> D zgemm(m, n, k)

BODY
    /* nothing */
END

zgemm_in_data_A0(m, n, k) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)
  k = 0..(descB.mt-m-2)

  /* Locality */
  : dataA((descB.mt-1)-m,k)

  READ  C    <- dataA((descB.mt-1)-m,k)
             -> C zgemm(m, n, k)

BODY
    /* nothing */
END


