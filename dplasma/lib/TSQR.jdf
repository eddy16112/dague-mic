extern "C" %{

#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/precision.h"
#include "dplasma/lib/dplasmajdf.h"

extern int rank;

%}

/***************************************************
 * DGEQRF documentation :
 * ======================
 *   - http://www.netlib.org/lapack/double/dgeqrf.f
 *
 **************************************************/
treeHeight [type = int] // height of the reduction tree

LOCALQR( index )  [profile = off]
    index = 0 .. (1 << treeHeight) - 1

    : A( index, 0 )

    READ  Rtop <- A(index, 0)                      [type = RTILE_T]
               -> ((index % 2) == 0)
                    ? Rtop    TSQR( 1, index / 2 )
                    : Rbottom TSQR( 1, index / 2 ) [type = RTILE_T]
BODY
    printf( "LOCALQR index: %i\n", index );
END

/**************************************************
 *                                                *
 **************************************************/
TSQR( level, index )
    level = 1 .. treeHeight

    index = 0 .. ((1 << (treeHeight - level)) - 1)

    : A( 2 * index, 0 )

    READ     Rbottom <- (level == 1)
                        ? Rtop    LOCALQR( (2 * index) + 1 )
                        : Rtop    TSQR(level - 1, (2 * index) + 1) [type = RTILE_T]

    RW       Rtop    <- (level == 1)
                        ? Rtop    LOCALQR( 2 * index )
                        : Rtop    TSQR( level - 1, 2 * index )   [type = RTILE_T]

                     -> (((index % 2) == 0) & (level < treeHeight))
                        ? Rtop    TSQR( level + 1, index / 2 )   [type = RTILE_T]

                     -> (((index % 2) == 1) & (level < treeHeight))
                        ? Rbottom TSQR( level + 1, index / 2 )   [type = RTILE_T]

                     -> (level == treeHeight)
                        ? A( 2*index, 0 )                        [type = RTILE_T]
BODY
    printf( "TSQR level: %i index: %i\n", level, index );
END

