extern "C" %{
/*
 *  Copyright (c) 2010      
 * 
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#define PRECISION_z

#include <lapacke.h>
#include <plasma.h>
#include <core_blas.h>


#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/precision.h"
#include "data_dist/matrix/matrix.h"
#include "dplasma/lib/dplasmajdf.h"

%}

/*
 * Globals
 */
uplo   [type = PLASMA_enum]
alpha  [type = Dague_Complex64_t]
beta   [type = Dague_Complex64_t]
descA  [type = "tiled_matrix_desc_t"]
A      [type = "dague_ddesc_t *"]

plasma_upper   [type="PLASMA_enum" hidden=on default=PlasmaUpper ]
plasma_lower   [type="PLASMA_enum" hidden=on default=PlasmaLower ]

LASET_L(m, n)

// Execution space
m = 1 .. ((uplo == plasma_upper) ? 0 : descA.mt-1)
n = 0 .. ( m < descA.nt ? m-1 : descA.nt-1 )

// Parallel partitioning
: A(m, n)

// Parameters

RW A <- A(m, n)
     -> A(m, n)
BODY
  int tempmm = ((m)==((descA.mt)-1)) ? ((descA.m)-(m*(descA.mb))) : (descA.mb);
  int tempnn = ((n)==((descA.nt)-1)) ? ((descA.n)-(n*(descA.nb))) : (descA.nb);
  int ldam = BLKLDD( descA, m );

        DRYRUN(
               LAPACKE_zlaset_work(
                   LAPACK_COL_MAJOR, 'A',
                   tempmm, tempnn, alpha, alpha, A, ldam);
               );

        printlog("thread %d laset( %d, %d )\n"
                 "    ( %s, %d, %d, %f, %f, A(%d,%d), %d)\n",
                 context->eu_id, m, n, "Lower",
                 tempmm, tempnn, creal(alpha), creal(beta), m, n, ldam);
END

LASET_U(m, n)

// Execution space
m = 0   .. descA.mt-1
n = m+1 .. ((uplo == plasma_lower) ? 0 : descA.nt-1)

// Parallel partitioning
: A(m, n)

// Parameters

RW   A <- A(m, n)
       -> A(m, n)
BODY
  int tempmm = ((m)==((descA.mt)-1)) ? ((descA.m)-(m*(descA.mb))) : (descA.mb);
  int tempnn = ((n)==((descA.nt)-1)) ? ((descA.n)-(n*(descA.nb))) : (descA.nb);
  int ldam = BLKLDD( descA, m );

        DRYRUN(
               LAPACKE_zlaset_work(
                   LAPACK_COL_MAJOR, 'A',
                   tempmm, tempnn, alpha, alpha, A, ldam);
               );

        printlog("thread %d laset( %d, %d )\n"
                 "    ( %s, %d, %d, %f, %f, A(%d,%d), %d)\n",
                 context->eu_id, m, n, "Upper",
                 tempmm, tempnn, creal(alpha), creal(beta), m, n, ldam);
END

LASET_DIAG(k)

// Execution space
     k = 0 .. ( descA.mt < descA.nt ? descA.mt-1 : descA.nt-1 )

// Parallel partitioning
: A(k, k)

// Parameters

RW  A <- A(k, k)
      -> A(k, k)
BODY
  int tempkm = ((k)==((descA.mt)-1)) ? ((descA.m)-(k*(descA.mb))) : (descA.mb);
  int tempkn = ((k)==((descA.nt)-1)) ? ((descA.n)-(k*(descA.nb))) : (descA.nb);
  int ldak = BLKLDD( descA, k );

        DRYRUN(
               LAPACKE_zlaset_work(
                   LAPACK_COL_MAJOR, lapack_const( uplo ),
                   tempkm, tempkn, alpha, beta, A, ldak);
               );

   printlog("thread %d laset_diag( %d )\n"
           "    ( %s, %d, %d, %e, %e, A(%d,%d), %d)\n",
           context->eu_id, k, plasma_const( uplo ),
            tempkm, tempkn, creal(alpha), creal(beta), k, k, ldak);
END
extern "C" %{

%}
