extern "C" %{
/*
 *  Copyright (c) 2010
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#define PRECISION_z

#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/precision.h"
#include "data_dist/matrix/matrix.h"
#include "dplasma/lib/memory_pool.h"
#include "dplasma/lib/dplasmajdf.h"

%}

side      [type = "PLASMA_enum"]
uplo      [type = "PLASMA_enum"]
trans     [type = "PLASMA_enum"]
diag      [type = "PLASMA_enum"]
alpha     [type = "dague_complex64_t"]
dataA     [type = "dague_ddesc_t *"]
descA     [type = "tiled_matrix_desc_t" hidden = on default = "*((tiled_matrix_desc_t*)dataA)"]
dataB     [type = "dague_ddesc_t *"]
descB     [type = "tiled_matrix_desc_t" hidden = on default = "*((tiled_matrix_desc_t*)dataB)"]


ztrmm(m, n) 
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)

  /* Locality */
  : dataB(m,n)

  CTL   ctl0 <- ctl0 zgemm(0..m-1, n, m)
  READ  A    <- A ztrmm_in_data_A0(m, n)
  RW    B    <- dataB(m,n)
             -> (((m+1)>=descA.mt)) ? dataB(m,n)
             -> ((descA.mt>=(m+2))) ? E zgemm(m, n, m+1)

BODY
{
  int tempmm = ((m)==(descB.mt-1)) ? (descB.m-(m*descB.mb)) : descB.mb;
  int tempnn = ((n)==(descB.nt-1)) ? (descB.n-(n*descB.nb)) : descB.nb;
  int lda = BLKLDD( descA, m );
  int ldb = BLKLDD( descB, m );

  printlog("CORE_ztrmm(%d, %d)\n"
           "\t(side, uplo, trans, diag, tempmm, tempnn, alpha, A(%d,%d)[%p], lda, B(%d,%d)[%p], ldb)\n",
  m, n, m, m, A, m, n, B);
  DRYRUN(

    CORE_ztrmm(side, uplo, trans, 
	diag, tempmm, tempnn, 
	alpha, A /* dataA(m,m) */, lda, 
	B /* dataB(m,n) */, ldb );
  );

}
END

ztrmm_in_data_A0(m, n) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)

  /* Locality */
  : dataA(m,m)

  READ  A    <- dataA(m,m)
             -> A ztrmm(m, n)

BODY
{
    /* nothing */
}
END

zgemm(m, n, k) 
  /* Execution Space */
  m = 0..inline_c %{ return dague_imin((descB.mt-1),(descA.mt-2)); %}
  n = 0..(descB.nt-1)
  k = (m+1)..(descA.mt-1)

  /* Locality */
  : dataB(m,n)

  CTL   ctl0 -> ctl0 ztrmm(k, n)
  READ  C    <- C zgemm_in_data_A0(m, n, k)
  READ  D    <- D zgemm_in_data_B1(m, n, k)
  RW    E    <- (((m+1)==k) & (descB.mt>=(1+m))) ? B ztrmm(k-1, n)
             <- ((k>=(m+2))) ? E zgemm(m, n, k-1)
             -> ((descA.mt>=(k+2))) ? E zgemm(m, n, k+1)
             -> ((descA.mt==(k+1))) ? dataB(m,n)

BODY
{
  int tempmm = ((m)==(descB.mt-1)) ? (descB.m-(m*descB.mb)) : descB.mb;
  int tempnn = ((n)==(descB.nt-1)) ? (descB.n-(n*descB.nb)) : descB.nb;
  int tempkn = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
  int lda = BLKLDD( descA, m );
  int ldbk = BLKLDD( descB, k );
  int ldb = BLKLDD( descB, m );

  printlog("CORE_zgemm(%d, %d, %d)\n"
           "\t(trans, PlasmaNoTrans, tempmm, tempnn, tempkn, alpha, A(%d,%d)[%p], lda, B(%d,%d)[%p], ldbk, 1.000000, B(%d,%d)[%p], ldb)\n",
  m, n, k, m, k, C, k, n, D, m, n, E);
  DRYRUN(

    CORE_zgemm(trans, PlasmaNoTrans, tempmm, 
	tempnn, tempkn, alpha, 
	C /* dataA(m,k) */, lda, D /* dataB(k,n) */, 
	ldbk, 1.000000, E /* dataB(m,n) */, 
	ldb );
  );

}
END

zgemm_in_data_B1(m, n, k) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)
  k = (m+1)..(descA.mt-1)

  /* Locality */
  : dataB(k,n)

  READ  D    <- dataB(k,n)
             -> D zgemm(m, n, k)

BODY
{
    /* nothing */
}
END

zgemm_in_data_A0(m, n, k) [profile = off]
  /* Execution Space */
  m = 0..(descB.mt-1)
  n = 0..(descB.nt-1)
  k = (m+1)..(descA.mt-1)

  /* Locality */
  : dataA(m,k)

  READ  C    <- dataA(m,k)
             -> C zgemm(m, n, k)

BODY
{
    /* nothing */
}
END


