extern "C" %{
/*
 *  Copyright (c) 2010
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#define PRECISION_z

#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/precision.h"
#include "data_dist/matrix/matrix.h"
#include "dplasma/lib/memory_pool.h"
#include "dplasma/lib/dplasmajdf.h"

%}

side  [type = "PLASMA_enum"]
uplo  [type = "PLASMA_enum"]
trans [type = "PLASMA_enum"]
diag  [type = "PLASMA_enum"]
alpha [type = "dague_complex64_t"]
descA [type = "tiled_matrix_desc_t"]
A     [type = "dague_ddesc_t *"]
descB [type = "tiled_matrix_desc_t"]
B     [type = "dague_ddesc_t *"]


ztrsm(k,m)
  /* Execution space */
  k = 0..(descB.nt-1)
  m = 0..(descB.mt-1)

  : B(m,(descB.nt-1)-k)

  READ  A <- A ztrsm_in_A0(k,m)

  RW    B <- (0==k) ? B(m,(descB.nt-1)-k)
          <- (k>=1) ? E zgemm(k-1, m, k)
          -> (descB.nt>=(2+k)) ? C zgemm(k, m, (k+1)..(descB.nt-1))
          -> B(m,(descB.nt-1)-k)

BODY

  int tempmm = ((m)==(descB.mt-1)) ? (descB.m-(m*descB.mb)) : descB.mb;
  int tempkn = ((k)==(0)) ? (descB.n-((descB.nt-1)*descB.nb)) : descB.nb;
  dague_complex64_t lalpha = (k==0) ? alpha : (dague_complex64_t)1.0;
  int lda = BLKLDD( descA, (descB.nt-1)-k );
  int ldb = BLKLDD( descB, m );

  DRYRUN(
        CORE_ztrsm(side, uplo, trans, diag,
                 tempmm, tempkn, lalpha,
                 A /* A((descB.nt-1)-k,(descB.nt-1)-k) */, lda,
                 B /* B(m,(descB.nt-1)-k) */, ldb );
         );

  printlog("CORE_ztrsm(%d, %d)\n"
           "\t(side, uplo, trans, diag, tempmm, tempkn, lalpha, A(%d,%d)[%p], lda, B(%d,%d)[%p], ldb)\n",
           k, m, (descB.nt-1)-k, (descB.nt-1)-k, A, m, (descB.nt-1)-k, B);
  
END

/*
 * Pseudo-task
 */
ztrsm_in_A0(k,m) [profile = off]
  k = 0..(descB.nt-1)
  m = 0..(descB.mt-1)

  : A((descB.nt-1)-k,(descB.nt-1)-k)

  RW A <- A((descB.nt-1)-k,(descB.nt-1)-k)
       -> A ztrsm(k,m)
BODY
/* nothing */
END


zgemm(k,m,n)
  /* Execution space */
  k = 0..(descB.nt-2)
  m = 0..(descB.mt-1)
  n = (k+1)..(descB.nt-1)

  : B(m,(descB.nt-1)-n)

  READ  C <- B ztrsm(k, m)
  READ  D <- D zgemm_in_A0(k,m,n)

  RW    E <- (k>=1) ? E zgemm(k-1, m, n)
          <- (0==k) ? B(m,(descB.nt-1)-n)
          -> (n>=(k+2)) ? E zgemm(k+1, m, n)
          -> ((k+1)==n) ? B ztrsm(n, m)
BODY

  int tempmm = ((m)==(descB.mt-1)) ? (descB.m-(m*descB.mb)) : descB.mb;
  int tempkn = ((k)==(0)) ? (descB.n-((descB.nt-1)*descB.nb)) : descB.nb;
  int ldb = BLKLDD( descB, m );
  int lda = BLKLDD( descA, (descB.nt-1)-k );
  dague_complex64_t lalpha = (k==0) ? alpha : (dague_complex64_t)1.0;

  DRYRUN(
      CORE_zgemm(PlasmaNoTrans, PlasmaNoTrans,
                 tempmm, descB.nb, tempkn,
                 -1.0,   C /* B(m,             (descB.nt-1)-k) */, ldb,
                         D /* A((descB.nt-1)-k,(descB.nt-1)-n) */, lda,
                 lalpha, E /* B(m,             (descB.nt-1)-n) */, ldb );
         );

  printlog("CORE_zgemm(%d, %d, %d)\n"
           "\t(PlasmaNoTrans, PlasmaNoTrans, tempmm, descB.nb, tempkn, mzone, B(%d,%d)[%p], ldb, A(%d,%d)[%p], lda, lalpha, B(%d,%d)[%p], ldb)\n",
             k, m, n, m, (descB.nt-1)-k, C, (descB.nt-1)-k, (descB.nt-1)-n, D, m, (descB.nt-1)-n, E);

END

/*
 * Pseudo-task
 */
zgemm_in_A0(k,m,n) [profile = off]
  k = 0..(descB.nt-2)
  m = 0..(descB.mt-1)
  n = (k+1)..(descB.nt-1)

  : A((descB.nt-1)-k,(descB.nt-1)-n)

  RW D <- A((descB.nt-1)-k,(descB.nt-1)-n)
       -> D zgemm(k,m,n)
BODY
/* nothing */
END

