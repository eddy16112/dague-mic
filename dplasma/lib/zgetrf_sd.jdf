extern "C" %{
  /**
   * PLASMA include for defined and constants.
   *
   * @precisions normal z -> s d c
   *
   */

#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_dist/matrix/matrix.h"
#include "memory_pool.h"
#include "dplasma/lib/dplasmajdf.h"

/* Ugly hack to be remove with plasma 2.3 */
#if (PLASMA_VERSION_MAJOR == 2) && (PLASMA_VERSION_MINOR == 2)
#define CORE_zssssm(M1, N1, M2, N2, K, IB, A1, LDA1, A2, LDA2, L1, LDL1, L2, LDL2, IPIV) \
    CORE_zssssm(M1, M2, N2, IB, K, A1, LDA1, A2, LDA2, L1, LDL1, L2, LDL2, IPIV)
#endif
#if (PLASMA_VERSION_MAJOR >= 2) && (PLASMA_VERSION_MINOR >= 4)
#define CORE_zgetrf CORE_zgetrf_incpiv
#endif

#define CIPIV(dLIPIV) ((int*)(dLIPIV))
#define CdL(dLIPIV)   ((Dague_Complex64_t*)dLIPIV + NB)

%}

/** Globals */
A
dLIPIV    [aligned = A]
N       /* Matrix Size (columns = rows) */
NB      /* Tile Size */
NT      /* Number of tiled columns */
IB
work_pool [type = "dague_memory_pool_t*"]
INFO      [type = "int*"]

/************************************************************************************
 *                                    GETRF                                         *
 ************************************************************************************/

GETRF_HACK(k)  [profile = off]
k = 0..NT-1

: A(k, k)

RW LU <- LU GETRF(k)
      -> (k != NT-1) ?                 L GESSM(k, k+1..NT-1)  [type = LOWER_TILE]
      -> A(k,k)                                               [type = LOWER_TILE]

; (NT-k)*(NT-k)*(NT-k)

BODY
 /* nothing */
END

GETRF(k)
k = 0..NT-1

: A(k, k)

//This SSSSM always run on the same node, so typing will have no effect.
RW LU <- (k == 0)    ? A(k, k) : C2 SSSSM(k-1, k, k)
      -> (k == NT-1) ? A(k, k) : U TSTRF(k, k+1)              [type = UPPER_TILE]
      -> LU GETRF_HACK(k)
RW IPIV <- dLIPIV(k, k)                                       [type = PIVOT_VECT]
        -> IPIV GESSM(k, k+1..NT-1)                           [type = PIVOT_VECT]
        -> dLIPIV(k, k)                                       [type = PIVOT_VECT]

; (NT-k)*(NT-k)*(NT-k)

BODY
    DRYRUN(
        int iinfo = 0;
        /*debug_warning(context->eu_id, "before", "GETRF", k, -1, -1);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, LU, "LU=A", k, k);*/
        /*debug_warning(context->eu_id, "before", "GETRF", k, -1, -1);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, IPIV, "IPIV", k, k);*/

        CORE_zgetrf(
            k == NT-1 ? N-k*NB : NB, /*k == descA.mt-1 ? descA.m-k*descA.nb : descA.nb*/
            k == NT-1 ? N-k*NB : NB, /*k == descA.nt-1 ? descA.n-k*descA.nb : descA.nb*/
            IB /*descL.mb*/,
            LU /*A(k, k)*/, NB /*descA.nb*/,
            CIPIV(IPIV) /*IPIV(k, k)*/, &iinfo);

        /*debug_warning(context->eu_id, "after", "GETRF", k, -1, -1);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, LU, "LU=A", k, k);*/
        /*debug_warning(context->eu_id, "after", "GETRF", k, -1, -1);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, IPIV, "IPIV", k, k);*/
        if (*INFO == 0 && iinfo > 0 && k == NT /*descA.mt*/-1)
            *INFO = iinfo + NB /*descA.nb*/*k;
        )

    printlog( "void task_GETRF(Dague_Complex64_t *A, int *IPIV)" );

END

/************************************************************************************
 *                                    GESSM                                         *
 ************************************************************************************/

GESSM(k, n)

k = 0   .. NT-2
n = k+1 .. NT-1

: A(k, n)

READ L    <- LU GETRF_HACK(k)                                  [type = LOWER_TILE]
READ IPIV <- IPIV GETRF(k)                                     [type = PIVOT_VECT]
RW   C1   <- (k == 0) ? A(k, n) : C2 SSSSM(k-1, n, k)
          -> C1 SSSSM(k, n, k+1)

; (NT-k)*(NT-n)*(NT-n)

BODY

    DRYRUN(                                
        /*debug_warning(context->eu_id, "before", "GESSM", k, n, -1);*/
        /*debug_lower((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, L, "L=A", k, k);*/
        /*debug_warning(context->eu_id, "before", "GESSM", k, n, -1);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", k, n);*/
        /*debug_warning(context->eu_id, "before", "GESSM", k, n, -1);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, IPIV, "IPIV", k, k);*/
        CORE_zgessm(
            k == NT-1 ? N-k*NB : NB /* k == descA.mt-1 ? descA.m-k*descA.nb : descA.nb */,
                   n == NT-1 ? N-n*NB : NB /* n == descA.nt-1 ? descA.n-n*descA.nb : descA.nb */,
            NB /* descA.nb */,
            IB /* descL.mb */,
            IPIV /*IPIV(k, k)*/,
            L /*A(k, k)*/, NB /* descA.nb */,
            C1 /*A(k, n)*/, NB /* descA.nb */);

        /*debug_warning(context->eu_id, "after", "GESSM", k, n, -1);*/
        /*debug_lower((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, L, "L=A", k, k);*/
        /*debug_warning(context->eu_id, "after", "GESSM", k, n, -1);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", k, n);*/
        /*debug_warning(context->eu_id, "after", "GESSM", k, n, -1);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, IPIV, "IPIV", k, k);*/
        )

     printlog("void task_GESSM(int *IPIV, Dague_Complex64_t *L, Dague_Complex64_t *C1)");

END



/************************************************************************************
 *                                    TSTRF                                         *
 ************************************************************************************/

TSTRF_OUT(k)  [profile = off]
k = 0 .. NT-2
  
: A(k, k)  

RW A <- U TSTRF(k, NT-1) [type = UPPER_TILE]
     -> A(k, k)          [type = UPPER_TILE]

; (NT-k)*(NT-k)*(NT-k)

BODY
/* nothing */
END


TSTRF(k, m)
k = 0..NT-2
m = k+1..NT-1

: A(m, k)

RW C1 <- (k == 0) ? A(m, k) : C2 SSSSM(k-1, k, m)
      -> C3 SSSSM(k, k+1..NT-1, m)
      -> A(m, k)
RW U  <- (m == k+1) ? LU GETRF(k) : U TSTRF(k, m-1)         [type = UPPER_TILE]
      -> (m == NT-1) ? A TSTRF_OUT(k) : U TSTRF(k, m+1)     [type = UPPER_TILE]
RW dLIPIV <- dLIPIV(m, k)                                   [type = LITTLE_L_PIVOT_VECT]
          -> dLIPIV SSSSM(k, k+1..NT-1, m)                  [type = LITTLE_L_PIVOT_VECT]
          -> dLIPIV(m, k)                                   [type = LITTLE_L_PIVOT_VECT]

; (NT-k)*(NT-k)*(NT-k)

BODY

     DRYRUN(                                                            
         int iinfo = 0;
         void* work = dague_private_memory_pop(work_pool);
         /*debug_warning(context->eu_id, "before", "TSTRF", k, m, -1);*/
         /*debug_upper((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, U, "U=A", k, k);*/
         /*debug_warning(context->eu_id, "before", "TSTRF", k, m, -1);*/
         /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", m, k);*/
         /*debug_warning(context->eu_id, "before", "TSTRF", k, m, -1);*/
         /*debug_l((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CdL(dLIPIV), "dL=L", m, k);*/
         /*debug_warning(context->eu_id, "before", "TSTRF", k, m, -1);*/
         /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CIPIV(dLIPIV), "IPIV", m, k);*/
         CORE_ztstrf(
             m == NT-1 ? N-m*NB : NB /* m == descA.mt-1 ? descA.m-m*descA.nb : descA.nb */,
             k == NT-1 ? N-k*NB : NB /* k == descA.nt-1 ? descA.n-k*descA.nb : descA.nb */,
             IB /* descL.mb */,
             NB /* descA.nb */,
             U /*A(k, k)*/, NB /* descA.nb */,
             C1 /*A(m, k)*/, NB /* descA.nb */,
             CdL(dLIPIV) /*L(m, k)*/, IB /* descL.mb */,
             CIPIV(dLIPIV) /*IPIV(m, k)*/, 
             work, NB /* descL.nb */, &iinfo);
         /*debug_warning(context->eu_id, "after", "TSTRF", k, m, -1);*/
         /*debug_upper((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, U, "U=A", k, k);*/
         /*debug_warning(context->eu_id, "after", "TSTRF", k, m, -1);*/
         /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", m, k);*/
         /*debug_warning(context->eu_id, "after", "TSTRF", k, m, -1);*/
         /*debug_l((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CdL(dLIPIV), "dL=L", m, k);*/
         /*debug_warning(context->eu_id, "after", "TSTRF", k, m, -1);*/
         /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CIPIV(dLIPIV), "IPIV", m, k);*/
         if (*INFO == 0 && iinfo > 0 && m == NT /*descA.mt*/-1)
             *INFO = iinfo + NB /*descA.nb*/*k;
         dague_private_memory_push(work_pool, work);
         )

     printlog("void task_TSTRF(Dague_Complex64_t *U, Dague_Complex64_t *L, Dague_Complex64_t *dL, int *IPIV)");

END

/************************************************************************************
 *                                    SSSSM                                         *
 ************************************************************************************/

SSSSM_OUT(k, n)  [profile = off]
k = 0 .. NT-2
n = k+1 .. NT - 1
  
: A(k, n)
  
RW A <- C1 SSSSM(k, n, NT-1)
     -> A(k, n)
          
; (NT-k)*(NT-n)*(NT-n)

BODY
/* nothing */
END
  
SSSSM(k, n, m)
k = 0   .. NT-2
n = k+1 .. NT-1
m = k+1 .. NT-1

: A(m, n)

READ C3   <- C1 TSTRF(k, m)
READ dLIPIV <- dLIPIV TSTRF(k, m)                                 [type = LITTLE_L_PIVOT_VECT]

RW   C2 <- (k == 0)   ? A(m, n)      : C2 SSSSM(k-1, n, m)
        -> ((n == k+1) & (m == k+1)) ? LU GETRF(k+1)
        -> ((n == k+1) & (k  < m-1)) ? C1 TSTRF(k+1, m)
        -> ((k  < n-1) & (m == k+1)) ? C1 GESSM(k+1, n)
        -> ((k  < n-1) & (k  < m-1)) ? C2 SSSSM(k+1, n, m)
RW   C1 <- (m == k+1)  ? C1 GESSM(k, n) : C1 SSSSM(k, n, m-1)
        -> (m == NT-1) ? A SSSSM_OUT(k, n)  : C1 SSSSM(k, n, m+1)

; (NT-k)*(NT-n)*(NT-n)

BODY

    DRYRUN( 
        /*debug_warning(context->eu_id, "before", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", k, n);*/
        /*debug_warning(context->eu_id, "before", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C2, "C2=A", m, n);*/
        /*debug_warning(context->eu_id, "before", "SSSSM", k, n, m);*/
        /*debug_l((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CdL(dLIPIV), "dL=L", m, k);*/
        /*debug_warning(context->eu_id, "before", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C3, "C3=A", m, k);*/
        /*debug_warning(context->eu_id, "before", "SSSSM", k, n, m);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CIPIV(dLIPIV), "IPIV", m, k);*/
        
        CORE_zssssm(
            NB /*descA.nb*/,
            n == NT-1 ? N-n*NB : NB /* n == descA.nt-1 ? descA.n-n*descA.nb : descA.nb */,
            m == NT-1 ? N-m*NB : NB /* m == descA.nt-1 ? descA.m-m*descA.nb : descA.nb */,
            n == NT-1 ? N-n*NB : NB /* n == descA.nt-1 ? descA.n-n*descA.nb : descA.nb */,
            NB /*descA.nb*/,
            IB /*descL.mb*/,
            C1 /*A(k, n)*/, NB /* descA.nb */,
            C2 /*A(m, n)*/, NB /* descA.nb */,
            CdL(dLIPIV) /*L(m, k)*/, IB /* descL.mb */,
            C3 /*A(m, k)*/, NB /* descA.nb */,
            CIPIV(dLIPIV) /*IPIV(m, k)*/);
        
        
        /*debug_warning(context->eu_id, "after", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C1, "C1=A", k, n);*/
        /*debug_warning(context->eu_id, "after", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C2, "C2=A", m, n);*/
        /*debug_warning(context->eu_id, "after", "SSSSM", k, n, m);*/
        /*debug_l((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CdL(dLIPIV), "dL=L", m, k);*/
        /*debug_warning(context->eu_id, "after", "SSSSM", k, n, m);*/
        /*debug_tile((tiled_matrix_desc_t*)(__dague_object->super.A), context->eu_id, C3, "C3=A", m, k);*/
        /*debug_warning(context->eu_id, "after", "SSSSM", k, n, m);*/
        /*debug_ipiv((tiled_matrix_desc_t*)(__dague_object->super.dLIPIV), context->eu_id, CIPIV(dLIPIV), "IPIV", m, k);*/
        )

    printlog("void task_SSSSM(Dague_Complex64_t *C1,  Dague_Complex64_t *C2, Dague_Complex64_t *dL, Dague_Complex64_t *L, int *IPIV)");

END

