#!/usr/bin/php -q
<?php
openlog("profile2svg", LOG_PID | LOG_PERROR, LOG_LOCAL0);

$WIDTH= 1600;
$THREAD_HEIGHT = 25.0;
$BASE_HEIGHT = 75.0;
$X_OFFSET = 150.0;
$PROC_SEP_HEIGHT = 5.0;

$HEIGHT=$BASE_HEIGHT;

$totaltime = 0;
$ALLXML = array();
for( $fileidx = 1; $fileidx < $argc; $fileidx++ ) {
    
    $xml = simplexml_load_file( $argv[$fileidx] );
    if( !$xml ) {
        echo "<!-- Parse Error in $argv[$fileidx] -->\n";
        continue;
    }
    $ALLXML[] = $xml;
    if( $xml->PROFILES['TOTAL_DURATION'] > $totaltime )
        $totaltime = $xml->PROFILES['TOTAL_DURATION'];
    $timeunit = $xml->PROFILES['TIME_UNIT'];

    $HEIGHT += $THREAD_HEIGHT * count($xml->PROFILES->THREAD) + $PROC_SEP_HEIGHT;
}

if( $HEIGHT == $BASE_HEIGHT ) {
    echo "No data to display\n";
    exit;
 }

$scale = $WIDTH / $totaltime;


if( $timeunit == "microseconds" || $timeunit == "microsecond" ) 
    $shorttimeunit = "us";
 else if ( $timeunit == "nanoseconds" || $timeunit == "nanosecond" )
     $shorttimeunit = "ns";
 else if ( $timeunit == "cycles" || $timeunit == "cycle" )
     $shorttimenunit = "cy";
 else
     $shorttimeunit = $timeunit;

echo '<?xml version="1.0" encoding="utf-8"?>';
?>
<!DOCTYPE svg PUBLIC "-_W3C_DTD SVG 1.0_EN" "http://www.w3.org/TR/SVG/DTD/svg10.dtd">
<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' 
 onload="startup(evt)"
 width="attr(width)"
 height='<?php echo "$HEIGHT"; ?>'
 font-family="Sans-serif"
 font-size="10pt">
  <script><![CDATA[
var svgDoc;
var Root;
var scale=1;
var translate=1;
var xmlns="http://www.w3.org/2000/svg"
var cursel=undefined;
var oldSelStyle="";
var pixelpertime=<?php echo "$scale" ?>;
var timeunit="<?php echo "$shorttimeunit"; ?>";
var width=<?php echo "$WIDTH"; ?>;
function startup(evt){
  O=evt.target
  svgDoc=O.ownerDocument;
  Root=svgDoc.documentElement;
  O.setAttribute("onmousemove","adjust(evt)")
  O.setAttribute("onmousedown","recolor(evt)")
  top.svgzoom = svgzoom
  top.svgtranslate = svgtranslate
  top.svg_outside_select = outsideSelect
  Root.width.baseVal.value = top.innerWidth - 100;
  top.ready()
}
function outsideSelect(x){
  if( cursel != undefined ) {
      cursel.setAttribute("style", oldSelStyle);
      cursel = undefined;
      oldSelStyle = "";
  }
  cursel = svgDoc.getElementById(x);
  if( !cursel ) {
    opera.postError("dposv.svg warning: unable to find the element named " + x);
  } else {
    oldSelStyle = cursel.getAttribute("style");
    cursel.setAttribute("style", "fill:#FFCC00");
  }
}
function recolor(evt){
  if( cursel != undefined ) {
      cursel.setAttribute("style", oldSelStyle);
      cursel = undefined;
      oldSelStyle = "";
  }

  if( evt.target.getElementsByTagName('FID').item(0) &&
      evt.target.getElementsByTagName('FID').item(0).firstChild &&
      evt.target.getElementsByTagName('FID').item(0).firstChild.nodeValue != "" ) {
      
      cursel = evt.target;
      oldSelStyle = cursel.getAttribute("style");
      cursel.setAttribute("style", "fill:#FFCC00");
      top.select_function(evt.target.getElementsByTagName('FName').item(0).firstChild.nodeValue +
                          evt.target.getElementsByTagName('FID').item(0).firstChild.nodeValue);
  } else {
      top.select_function();
  }
}
function adjust(evt){
  if( evt.target.getElementsByTagName('FName').item(0) &&
      evt.target.getElementsByTagName('FName').item(0).firstChild ) {
    targetFName = evt.target.getElementsByTagName('FName').item(0).firstChild.nodeValue;
  } else {
    targetFName = "";
  }
  if( evt.target.getElementsByTagName('FDesc').item(0) &&
      evt.target.getElementsByTagName('FDesc').item(0).firstChild ) {
    targetFDesc = evt.target.getElementsByTagName('FDesc').item(0).firstChild.nodeValue;
  } else {
    targetFDesc = "";
  }
  top.mouseMove(targetFName, targetFDesc)
}
function updateRule() {
  for(i = 0; i < 20; i++) {
      x = (i * (width / 20) / pixelpertime) /scale - (translate / pixelpertime);
      svgDoc.getElementById('ruleText' + i).firstChild.nodeValue = x.toPrecision(3) + " " + timeunit;
  }
}
function svgzoom( x ) {
  scale=x;
  svgDoc.getElementById('gantt').setAttribute("transform", "scale(" + scale + ", 1) translate(" + translate + ", 0)");
  updateRule();
}
function svgtranslate( x ) {
  translate=-x;
  svgDoc.getElementById('gantt').setAttribute("transform", "scale(" + scale + ", 1) translate(" + translate + ", 0)");
  updateRule();
}
//]]>
  </script>
    <rect x='0' y='0' width='100%' height='100%' fill='white'>
      <FName><![CDATA[]]></FName>
      <FDesc><![CDATA[]]></FDesc>
    </rect>
    <g id="hrule">
     <rect x='<?php echo "$X_OFFSET";?>' y="66.00" width="<?php echo "$WIDTH";?>" height="2.0" />
<?php
for( $i = 0; $i < 20; $i++) {
    $x = $i * $WIDTH/20.0 + $X_OFFSET;
    $time = sprintf("%.2le %s", $i * $totaltime / 20.0, $shorttimeunit);
    echo "     <rect x='$x' y='63.00' width='1.0' height='8.0' />\n";
    echo "     <g transform='rotate(-45 $x 65)'>\n";
    echo "      <text x='$x' y='63.00' id='ruleText$i'>$time</text>\n";
    echo "     </g>\n";
}
?>
    </g><!-- hrule -->
    <g id='drawingarea' transform='translate(<?php echo "$X_OFFSET";?>, 0)'>
     <g id='gantt' transform='scale(1) translate(0, 0)'>
<?php
$proc = 0;
$y = $BASE_HEIGHT;
foreach ($ALLXML as $xml) {
    echo "      <g id='drawingarea$proc'>\n";
    
    $computekey = "";
    $gemmkey = "";
    foreach ( $xml->DICTIONARY->KEY as $dk ) {
        if( ($dk->NAME . "") == "compute" ) {
            $computekey = $dk['ID'];
        }
        if( ($dk->NAME . "") == "GEMM" ) {
            $gemmkey = $dk['ID'];
        }
    }
    if( $computekey == "" || $gemmkey == "" ) {
        syslog(LOG_ERR, "Unable to find compute key or gemm key in dictionnary: is this the GPU version?");
        exit(1);
    }

    $gpus = array();
    foreach ( $xml->PROFILES->THREAD as $th ) {
        if( preg_match("/GPU/i", $th->IDENTIFIER ) ) {
            foreach ( $th->KEY as $dk ) {
                if( ($dk['ID'] . "") == $computekey ) {
                    $gpus[] = $dk;
                }
            }
        }
    }

    $i = 0;
    foreach ( $xml->PROFILES->THREAD as $th ) {
        echo "       <g id='P${proc}T$i'>\n";
        
        $h = $THREAD_HEIGHT;
        
        foreach ( $th->KEY as $key ) {
            $my_dk = null;
            foreach ( $xml->DICTIONARY->KEY as $dk ) {
                if( ($dk['ID'] . "") == ($key['ID'] . "") ) {
                    $my_dk = $dk;
                    break;
                }
            }
            if( $my_dk == null ) {
                echo "Malformed dictionary: unable to find key " . $key['ID'] . "\n";
                continue;
            }
            $name = $my_dk->NAME;
            
            foreach ( $key->EVENT as $event ) {

                $normalevent = true;
                $gpuid = 0;
                if( ($key['ID'] . "") == $gemmkey ) {
                    foreach( $gpus as $gpu ) {
                        foreach( $gpu->EVENT as $gpuevent ) {
                            if( ($gpuevent->ID . "") == ($event->ID . "") ) {
                                $normalevent = false;
                                break 2;
                            }
                        }
                        $gpuid++;
                    }
                }

                if( $normalevent ) {
                    $attributes = $my_dk->ATTRIBUTES;
                } else {
                    $attributes = sprintf("fill:#%02X%02X%02X", 
                                          ($gpuid+4) * 255 / 8,  ($gpuid+4) * 255 / 8,  ($gpuid+4) * 255 / 8);
                }

                $duration = ($event->END - $event->START);
                $x = $event->START * $scale;
                $w = $duration * $scale;
                $id = $event->ID;
                echo "        <rect x='$x' y='$y' width='$w' height='$h' style='$attributes' id='$name$id'>\n";
                echo "         <FName>$name</FName>\n";
                echo "         <FDesc>$duration $timeunit</FDesc>\n";
                echo "         <FID>$id</FID>\n";
                echo "        </rect>\n";
            }
        }
        
        $y += $THREAD_HEIGHT;
        echo "       </g><!-- P${proc}T$i -->\n";
        $i++;
    }

    echo "      </g><!-- drawingarea of process $proc -->\n";
    $proc++;
    $y += $PROC_SEP_HEIGHT;
 }
?>
     </g><!-- gantt -->
    </g><!-- drawingarea -->
    <g id="vrule">
      <rect x='0' y='0' width='<?php echo "$X_OFFSET";?>' height='100%' fill='white'>
       <FName><![CDATA[]]></FName>
       <FDesc><![CDATA[]]></FDesc>
     </rect>
<?php
$y = $BASE_HEIGHT + 5;
$proc = 0;
foreach ($ALLXML as $xml) {
    
    foreach ( $xml->PROFILES->THREAD as $th ) {
        $words = explode(" ", "Proc $proc: $th->IDENTIFIER");
        echo "      <text x='0.0' y='$y' font-size='11'>\n";
        $line = "";
        foreach($words as $w) {
            if( strlen($line) + strlen($w) > 25 ) {
                if( strlen($line) > 0 ) {
                    echo "       <tspan x='0.0' dy='8'>$line</tspan>\n";
                }
                $line = "$w";
            } else {
                $line = "$line $w";
            }
        }
        if( strlen($line) > 0 ) {
            echo "       <tspan x='0.0' dy='8'>$line</tspan>\n";
        }
        echo "      </text>\n";
        $y += $THREAD_HEIGHT;
    }
    $y += $PROC_SEP_HEIGHT;
    $proc++;
 }
?>        
    </g>
</svg>
