extern "C" %{
/*
 *  Copyright (c) 2010
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#define PRECISION_z

#include <plasma.h>
#include <core_blas.h>

#include <starpu.h>
#include "magma.h"
#include "cublas.h"
#include "cuda.h"
#include "dague.h"
#include "data_distribution.h"
#include "cholesky_data.h"

#define BLKLDD(_desc, _k) (_desc).mb

%}

NB [type = "int"]
SIZE [type = "int"]
uplo [type = "PLASMA_enum"]
INFO [type = "int*"]


cl_spotrf(k)
  /* Execution space */
  k = 0..(SIZE-1)

  : A(k,k)

  /* T == A(k,k) */
  RW    T <- (k>=1) ? T cl_sherk(k-1, k) 
          <- (0==k) ? A(k,k)
          -> (SIZE>=(k+2)) ? T cl_strsm(k, (k+1)..(SIZE-1)) 
          -> A(k,k)

  /*
  Anti-dependencies:

  */

BODY

{
    CORE_spotrf(PlasmaLower, NB , T, NB , INFO );
    
}

END

BODY CUDA

{
    magma_spotrf_gpu('L', NB , (float*) T, NB , INFO );
    cudaDeviceSynchronize();
    
}

END



cl_strsm(k,m)
  /* Execution space */
  k = 0..(SIZE-2)
  m = (k+1)..(SIZE-1)

  : A(m,k)

  /* A == A(m1,k) */
  /* B == A(n,k) */
  /* C == A(m1,n) */
  /* T == A(k,k) */
  READ  T <- T cl_spotrf(k) 
  RW    C <- (0==k) ? A(m,k)
          <- (k>=1) ? C cl_sgemm(k-1, m, k) 
          -> (SIZE>=(m+2)) ? B cl_sgemm(k, inline_c %{ return ((m+1)>(k+1)) ? (m+1) : (k+1); %}..(SIZE-1), m) 
          -> A(m,k)
          -> A cl_sherk(k, m) 
          -> (m>=(k+2)) ? A cl_sgemm(k, m, (k+1)..(m-1)) 

  /*
  Anti-dependencies:

  */

BODY

{
    CORE_strsm(PlasmaRight, PlasmaLower, PlasmaTrans, PlasmaNonUnit, NB , NB , 1.000000 , T, NB , C, NB );
    
}

END

BODY CUDA

{
    cublasStrsm((char) PlasmaRight, (char) PlasmaLower, (char) PlasmaTrans, (char) PlasmaNonUnit, NB , NB , 1.000000 , (float*) T, NB , (float*) C, NB );
    cudaDeviceSynchronize();
    
}

END



cl_sherk(k,m1)
  /* Execution space */
  k = 0..(SIZE-2)
  m1 = (k+1)..(SIZE-1)

  : A(m1,m1)

  /* A == A(m1,k) */
  /* C == A(m,k) */
  /* T == A(m1,m1) */
  READ  A <- C cl_strsm(k, m1) 
  RW    T <- (k>=1) ? T cl_sherk(k-1, m1) 
          <- (0==k) ? A(m1,m1)
          -> ((k+1)==m1) ? T cl_spotrf(m1) 
          -> (m1>=(k+2)) ? T cl_sherk(k+1, m1) 

  /*
  Anti-dependencies:

  */

BODY

{
    int* zlli;
    int** zz;
    CORE_ssyrk(PlasmaLower, PlasmaNoTrans, NB , NB , -1.000000 , (float*) A, NB , 1.000000 , (float*) T, NB );
    
}

END

BODY CUDA

{
    cublasSsyrk(PlasmaLower, PlasmaNoTrans, NB , NB , -1.000000 , (float*) A, NB , 1.000000 , (float*) T, NB );
    cudaDeviceSynchronize();
    
}

END



cl_sgemm(k,m1,n)
  /* Execution space */
  k = 0..(SIZE-2)
  m1 = (k+2)..(SIZE-1)
  n = (k+1)..(m1-1)

  : A(m1,n)

  /* A == A(m1,k) */
  /* B == A(n,k) */
  /* C == A(m1,n) */
  READ  A <- C cl_strsm(k, m1) 
  READ  B <- C cl_strsm(k, n) 
  RW    C <- (0==k) ? A(m1,n)
          <- (k>=1) ? C cl_sgemm(k-1, m1, n) 
          -> ((1+k)==n) ? C cl_strsm(n, m1) 
          -> (n>=(2+k)) ? C cl_sgemm(k+1, m1, n) 

  /*
  Anti-dependencies:

  */

BODY

{
    CORE_sgemm(PlasmaNoTrans, PlasmaTrans, NB , NB , NB , -1.000000 , A, NB , B, NB , 1.000000 , C, NB );
    
}

END

BODY CUDA

{
    float* l[5 ];
    cublasSgemm(PlasmaNoTrans, PlasmaTrans, NB , NB , NB , -1.000000 , (float*) B, NB , (float*) A, NB , 1.000000 , (float*) C, NB );
    cudaDeviceSynchronize();
    
}

END

